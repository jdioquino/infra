---
#  - name: update hostname
#    hostname:
#      name: "{{ item.value.c_name }}"
#    with_dict: "{{ clonevm }}"

  - name: update hostname
    hostname:
      name: "{{ hostname }}"

  - name: add user
    user:
      name: "{{ item.value.c_user }}"
      password: "{{ item.value.c_userpw }}"
      groups: "{{ item.value.c_group }}"
      append: yes
    with_dict: "{{ clonevm }}"
  
  - name: create .ssh directory and authorized_keys file
    file:
      path: "{{ item.path }}"
      state: "{{ item.type }}"
      owner: "{{ clonevm.vm1.c_user }}"
      group: "{{ clonevm.vm1.c_user }}"
      mode: "{{ item.mode }}"  
    loop:
    - { path: '/home/{{ clonevm.vm1.c_user }}/.ssh', type: 'directory', mode: '0700' }
    - { path: '/home/{{ clonevm.vm1.c_user }}/.ssh/authorized_keys', type: 'touch', mode: '0600' }

  - name: import user's public key
    authorized_key:
      key: "{{ item.value.c_userpubkey }}"
      user: "{{ item.value.c_user }}"
    with_dict: "{{ clonevm }}"
 
  - name: set timezone to Asia/Manila
    timezone:
      name: Asia/Manila

  - name: disable root ssh
    replace:
      path: /etc/ssh/sshd_config
      regexp: \#PermitRootLogin yes
      replace: "PermitRootLogin no"
      backup: yes
    notify: "restart sshd"

  - name: install packages
    yum:
      name: [ nfs-utils, bash-completion, wget, nc ]
      state: present

  - name: create nfs directory
    file:
      path: /nfs-share
      state: directory
      owner: "{{ docker_user.name }}"
      group: "{{ docker_user.name }}"

  - name: mount nfs share permanently
    lineinfile:
      path: /etc/fstab
      line: 192.168.1.20:/ /nfs-share nfs defaults 0 0

  - name: mount all
    shell:
      cmd: mount -a

  - name: create a route for wireguard traffic
    copy:
      src: files/route-eth0
      dest: /etc/sysconfig/network-scripts/
    notify: reboot server to properly apply network route

#  - name: reboot server to properly apply network route
#    reboot:
#      reboot_timeout: 1800
#      test_command: uptime
